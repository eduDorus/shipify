/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ch.hslu.ta.prg2.gui;

import ch.hslu.ta.prg2.Gamestate.*;
import ch.hslu.ta.prg2.gui.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author comander
 */
public class TestGameBoard extends javax.swing.JFrame {

    private ArrayList<FieldButton> buttons_PlayerBattleField = new ArrayList<>();
    private ArrayList<FieldButton> buttons_OpponentBattleField = new ArrayList<>();

    /**
     * Creates new form TestGameBoard
     */
    public TestGameBoard() {
        initComponents();

        generateBattleFields();

        //Not used yet --> remove later
        addSomeListeners();
    }

    private void generateBattleFields() {

        for (int x = 0; x < 10; x++) {
            for (int y = 0; y < 10; y++) {
                FieldButton btn = new FieldButton(x, y, Field.WATER, new ImageIcon(getClass().getResource("water.jpg")));
                this.buttons_PlayerBattleField.add(btn);
                this.playerBattleField.add(btn);
            }
        }

        for (int x = 0; x < 10; x++) {
            for (int y = 0; y < 10; y++) {
                FieldButton btn = new FieldButton(x, y, Field.WATER, new ImageIcon(getClass().getResource("water.jpg")));
                this.buttons_OpponentBattleField.add(btn);
                this.opponentBattleField.add(btn);
            }
        }

    }

    private void addSomeListeners() {

        this.playerBattleField.setFocusable(true);

        this.playerBattleField.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e); //To change body of generated methods, choose Tools | Templates.

                System.out.println(e.getKeyCode());
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerPanel = new javax.swing.JPanel();
        playerBattleField = new javax.swing.JPanel();
        playerInfoBoard = new javax.swing.JPanel();
        btn_5fieldShip = new javax.swing.JButton();
        btn_1fieldShip = new javax.swing.JButton();
        btn_resetBattleField = new javax.swing.JButton();
        opponentPanel = new javax.swing.JPanel();
        opponentBattleField = new javax.swing.JPanel();
        opponentInfoBoard = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(100, 100, 1200, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 800));
        getContentPane().setLayout(new java.awt.GridLayout(1, 2));

        playerPanel.setBackground(new java.awt.Color(102, 204, 0));
        playerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playerBattleField.setLayout(new java.awt.GridLayout(10, 10));
        playerPanel.add(playerBattleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 350));

        btn_5fieldShip.setText("set 5 Field Ship");

        btn_1fieldShip.setText("set 1 Field Ship");
        btn_1fieldShip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1fieldShipActionPerformed(evt);
            }
        });

        btn_resetBattleField.setText("RESET");
        btn_resetBattleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetBattleFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playerInfoBoardLayout = new javax.swing.GroupLayout(playerInfoBoard);
        playerInfoBoard.setLayout(playerInfoBoardLayout);
        playerInfoBoardLayout.setHorizontalGroup(
            playerInfoBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerInfoBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerInfoBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_5fieldShip)
                    .addComponent(btn_1fieldShip))
                .addContainerGap(264, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerInfoBoardLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_resetBattleField)
                .addGap(65, 65, 65))
        );
        playerInfoBoardLayout.setVerticalGroup(
            playerInfoBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerInfoBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_5fieldShip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_1fieldShip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_resetBattleField)
                .addGap(20, 20, 20))
        );

        playerPanel.add(playerInfoBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 410, 150));

        getContentPane().add(playerPanel);

        opponentPanel.setBackground(new java.awt.Color(204, 0, 51));
        opponentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        opponentBattleField.setLayout(new java.awt.GridLayout(10, 10));
        opponentPanel.add(opponentBattleField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 400, 350));

        javax.swing.GroupLayout opponentInfoBoardLayout = new javax.swing.GroupLayout(opponentInfoBoard);
        opponentInfoBoard.setLayout(opponentInfoBoardLayout);
        opponentInfoBoardLayout.setHorizontalGroup(
            opponentInfoBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );
        opponentInfoBoardLayout.setVerticalGroup(
            opponentInfoBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        opponentPanel.add(opponentInfoBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 410, 150));

        getContentPane().add(opponentPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_1fieldShipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_1fieldShipActionPerformed
        // TODO add your handling code here:

        //Show valid fields
        Iterator<FieldButton> itr1 = this.buttons_PlayerBattleField.iterator();

        while (itr1.hasNext()) {
            FieldButton current = itr1.next();
            if (current.getFieldstate() == Field.WATER) {

                current.setBorder(BorderFactory.createLineBorder(Color.GREEN, 1));
                current.setOpaque(false);//enable this to create a button border 

            }

            if (current.getFieldstate() == Field.GAP) {

                current.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
                current.setOpaque(false);//enable this to create a button border 

            }

            if (current.getFieldstate() == Field.SHIP) {

                current.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
                current.setOpaque(false);//enable this to create a button border 
                current.setIcon(new ImageIcon(getClass().getResource("ship-icon-59484.png")));

            }

        }

        //JDialogue -> User Input
        //Missing try-catch
        JTextField xCoord = new JTextField();
        JTextField yCoord = new JTextField();
        Object[] message = {"X-Koordinate", xCoord,
            "Y-Koordinate", yCoord};

        JOptionPane pane = new JOptionPane(message,
                JOptionPane.PLAIN_MESSAGE,
                JOptionPane.OK_CANCEL_OPTION);
        pane.createDialog(null, "Setzen des 1ner Schiffts").setVisible(true);

        //System.out.println("Eingabe: " + xCoord.getText() + ", " + yCoord.getText());
        int xPos = Integer.parseInt(xCoord.getText());
        int yPos = Integer.parseInt(yCoord.getText());

        //System.exit(0);
        Iterator<FieldButton> itr2 = this.buttons_PlayerBattleField.iterator();

        while (itr2.hasNext()) {
            FieldButton current = itr2.next();
            current.setBackground(Color.WHITE);
            current.setIcon(new ImageIcon(getClass().getResource("water.jpg")));
            if (current.getXCords() == xPos && current.getYCords() == yPos) {
                current.setIcon(new ImageIcon(getClass().getResource("ship-icon-59484.png")));
                current.setFieldstate(Field.SHIP);

                int xCord = current.getXCords();
                int yCord = current.getYCords();

                Iterator<FieldButton> innerItr = this.buttons_PlayerBattleField.iterator();

                while (innerItr.hasNext()) {
                    FieldButton innerCurrent = innerItr.next();

                    if (innerCurrent.getXCords() == (xCord + 1) && innerCurrent.getYCords() == yCord) {
                        innerCurrent.setFieldstate(Field.GAP);
                    }
                    if (innerCurrent.getXCords() == (xCord - 1) && innerCurrent.getYCords() == yCord) {
                        innerCurrent.setFieldstate(Field.GAP);
                    }
                    if (innerCurrent.getYCords() == (yCord + 1) && innerCurrent.getXCords() == xCord) {
                        innerCurrent.setFieldstate(Field.GAP);
                    }
                    if (innerCurrent.getYCords() == (yCord - 1) && innerCurrent.getXCords() == xCord) {
                        innerCurrent.setFieldstate(Field.GAP);
                    }

                }

            }
        }

        //Request to get focus for KeyListener again
        this.playerBattleField.requestFocus();


    }//GEN-LAST:event_btn_1fieldShipActionPerformed

    private void btn_resetBattleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetBattleFieldActionPerformed
        // TODO add your handling code here:

        //TODO THE RESET FUNCTION
        System.out.println("hallo");
    }//GEN-LAST:event_btn_resetBattleFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_1fieldShip;
    private javax.swing.JButton btn_5fieldShip;
    private javax.swing.JButton btn_resetBattleField;
    private javax.swing.JPanel opponentBattleField;
    private javax.swing.JPanel opponentInfoBoard;
    private javax.swing.JPanel opponentPanel;
    private javax.swing.JPanel playerBattleField;
    private javax.swing.JPanel playerInfoBoard;
    private javax.swing.JPanel playerPanel;
    // End of variables declaration//GEN-END:variables
}
